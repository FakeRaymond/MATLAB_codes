// -------------------------------------------------------------
// 
// File Name: hdlsrc\fil_pid\I_component.v
// Created: 2021-02-01 02:39:57
// 
// Generated by MATLAB 9.9 and HDL Coder 3.17
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: I_component
// Source Path: fil_pid/Controller/I_component
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module I_component
          (clk,
           reset,
           enb,
           In1,
           Out1);


  input   clk;
  input   reset;
  input   enb;
  input   signed [31:0] In1;  // sfix32_En16
  output  signed [31:0] Out1;  // sfix32_En42


  wire signed [47:0] Gain_2_mul_temp;  // sfix48_En54
  wire signed [31:0] Gain_2_out1;  // sfix32_En40
  wire signed [31:0] Sum1_out1;  // sfix32_En28
  reg signed [31:0] Unit_Delay_1_out1;  // sfix32_En28
  wire signed [44:0] Sum1_add_cast;  // sfix45_En40
  wire signed [44:0] Sum1_add_cast_1;  // sfix45_En40
  wire signed [44:0] Sum1_add_temp;  // sfix45_En40
  wire signed [47:0] Gain_4_mul_temp;  // sfix48_En57
  wire signed [31:0] Gain_4_out1;  // sfix32_En42


  assign Gain_2_mul_temp = 16'sb0110101101100000 * In1;
  assign Gain_2_out1 = Gain_2_mul_temp[45:14];



  always @(posedge clk or posedge reset)
    begin : Unit_Delay_1_process
      if (reset == 1'b1) begin
        Unit_Delay_1_out1 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        if (enb) begin
          Unit_Delay_1_out1 <= Sum1_out1;
        end
      end
    end



  assign Sum1_add_cast = {{13{Gain_2_out1[31]}}, Gain_2_out1};
  assign Sum1_add_cast_1 = {Unit_Delay_1_out1[31], {Unit_Delay_1_out1, 12'b000000000000}};
  assign Sum1_add_temp = Sum1_add_cast + Sum1_add_cast_1;
  assign Sum1_out1 = Sum1_add_temp[43:12];



  assign Gain_4_mul_temp = 16'sb0110100011011100 * Sum1_out1;
  assign Gain_4_out1 = Gain_4_mul_temp[46:15];



  assign Out1 = Gain_4_out1;

endmodule  // I_component

